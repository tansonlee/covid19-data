{"version":3,"sources":["api/api.js","functions.js","components/SmallChart/SmallChart.js","components/Cards/Cards.js","components/Chart/Chart.js","components/Dropdown/Dropdown.js","App.js","index.js"],"names":["baseURL","startDate","fetchCumulative","location","a","axios","get","todayData","parsedTodayData","cases","data","summary","cumulative_cases","recoveries","cumulative_recovered","deaths","cumulative_deaths","date","dataSeries","parsedDataSeries","map","recovered","fetchChange","console","log","formatDate","dateComponents","split","dateString","10","11","12","SmallChart","props","borderCol","backgroundCol","lerpeddata","i","length","average","Math","round","lerpedcases","forEach","push","lineChart","labels","datasets","label","borderColor","backgroundColor","fill","pointRadius","pointHitRadius","options","responsive","tooltips","enabled","hover","mode","scaleShowLabels","scales","xAxes","display","yAxes","legend","className","Cards","casesChart","recoveriesChart","deathsChart","toLocaleString","Chart","ticks","autoSkip","maxTicksLimit","fontColor","gridLines","zeroLineColor","color","callback","value","index","values","scaleLabel","filter","item","chart","text","includes","fontSize","Dropdown","onLocationChange","FormControl","NativeSelect","inputProps","classes","icon","defaultValue","onChange","e","target","App","state","fetchData","fetchedData","setState","changeLocation","newLocation","this","code","onClick","canada","AB","BC","MB","NB","NL","NT","NS","NU","ON","nd","QC","SK","YT","href","rel","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+VAEMA,EAAU,mCACVC,EAAY,aAELC,EAAe,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,+EAELC,IAAMC,IAAN,UAAaN,EAAb,gBAA4BG,IAFvB,cAEvBI,EAFuB,OAGvBC,EAAkB,CACvBC,MAAOF,EAAUG,KAAKC,QAAQ,GAAGC,iBACjCC,WAAYN,EAAUG,KAAKC,QAAQ,GAAGG,qBACtCC,OAAQR,EAAUG,KAAKC,QAAQ,GAAGK,kBAClCC,KAAMV,EAAUG,KAAKC,QAAQ,GAAGM,MAPJ,SAUJZ,IAAMC,IAAN,UACrBN,EADqB,gBACNG,EADM,kBACYF,IAXR,cAUvBiB,EAVuB,OAavBC,EAAmBD,EAAWR,KAAKC,QAAQS,KAAI,SAAAV,GACpD,MAAO,CACND,MAAOC,EAAKE,iBACZS,UAAWX,EAAKI,qBAChBC,OAAQL,EAAKM,kBACbC,KAAMP,EAAKO,SAlBgB,kBAsBtB,CAAEV,UAAWC,EAAiBU,WAAYC,IAtBpB,2HAAH,sDA4BfG,EAAW,uCAAG,WAAMnB,GAAN,qBAAAC,EAAA,+EAEDC,IAAMC,IAAN,UAAaN,EAAb,gBAA4BG,IAF3B,cAEnBI,EAFmB,OAGnBC,EAAkB,CACvBC,MAAOF,EAAUG,KAAKC,QAAQ,GAAGF,MACjCI,WAAYN,EAAUG,KAAKC,QAAQ,GAAGU,UACtCN,OAAQR,EAAUG,KAAKC,QAAQ,GAAGI,OAClCE,KAAMV,EAAUG,KAAKC,QAAQ,GAAGM,MAPR,SAUAZ,IAAMC,IAAN,UACrBN,EADqB,gBACNG,EADM,kBACYF,IAXZ,cAUnBiB,EAVmB,OAanBC,EAAmBD,EAAWR,KAAKC,QAAQS,KAAI,SAAAV,GACpD,MAAO,CACND,MAAOC,EAAKD,MACZY,UAAWX,EAAKW,UAChBN,OAAQL,EAAKK,OACbE,KAAMP,EAAKO,SAIbM,QAAQC,IAAIN,GAtBa,kBAwBlB,CAAEX,UAAWC,EAAiBU,WAAYC,IAxBxB,2HAAH,sDCZXM,G,OAAa,SAAAR,GACzB,IAeMS,EAAiBT,EAAKU,MAAM,KAC9BC,EAAa,GAMjB,OALAA,GAjBe,CACd,KAAM,UACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,MACN,KAAM,OACN,KAAM,OACN,KAAM,SACN,KAAM,YACNC,GAAI,UACJC,GAAI,WACJC,GAAI,YAKgBL,EAAe,IACpCE,GAAc,IACdA,GAAcF,EAAe,GAC7BE,GAAc,KACdA,GAAcF,EAAe,K,iBCsCfM,EA5EI,SAAC,GAAyD,IAAD,IAAtDC,MAASf,EAA6C,EAA7CA,WAAYgB,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,cACrD,GAAIjB,IAAe,GAClB,MAAO,aAIR,IAAMkB,EAAalB,EAAWE,KAAI,SAACV,EAAM2B,GACxC,GAAU,IAANA,GAAWA,IAAMnB,EAAWoB,OAAS,EACxC,OAAO5B,EAEP,IAAM6B,GAAWrB,EAAWmB,EAAI,GAAKnB,EAAWmB,EAAI,IAAM,EAI1D,OAHcG,KAAKC,OAbH,EAcDF,EAAU7B,GAAxB,MAOGgC,EAAc,GACpBN,EAAWO,SAAQ,SAACjC,EAAM2B,GACrBA,EAAI,IAAM,GACbK,EAAYE,KAAKlC,MAInB,IAAMmC,EACiB,IAAtB3B,EAAWoB,OACV,cAAC,OAAD,CACC5B,KAAM,CACLoC,OAAQJ,EAAYtB,KAAI,SAAAV,GAAI,MAAI,MAChCqC,SAAU,CACT,CACCrC,KAAMgC,EACNM,MAAO,kBACPC,YAAaf,EACbgB,gBAAiBf,EACjBgB,MAAM,EACNC,YAAa,EACbC,eAAgB,MAInBC,QAAS,CACRC,YAAY,EACZC,SAAU,CAAEC,SAAS,GACrBC,MAAO,CAAEC,KAAM,MACfC,iBAAiB,EACjBC,OAAQ,CACPC,MAAO,CACN,CACCC,SAAS,IAGXC,MAAO,CACN,CACCD,SAAS,KAIZE,OAAQ,CACPF,SAAS,MAKZ,aAGF,OACC,mCACC,qBAAKG,UAAU,sBAAf,SAAsCrB,OCM1BsB,EA9ED,SAAC,GAA0C,IAAD,IAAvClC,MAAS1B,EAA8B,EAA9BA,UAAWW,EAAmB,EAAnBA,WACpC,GAAIX,IAAc,IAA4B,IAAtBW,EAAWoB,OAClC,MAAO,aAGR,IAAM8B,EACL,cAAC,EAAD,CACCnC,MAAO,CACNf,WAAYA,EAAWE,KAAI,qBAAGX,SAC9ByB,UAAW,qBACXC,cAAe,0BAKZkC,EACL,cAAC,EAAD,CACCpC,MAAO,CACNf,WAAYA,EAAWE,KAAI,qBAAGC,aAC9Ba,UAAW,qBACXC,cAAe,0BAKZmC,EACL,cAAC,EAAD,CACCrC,MAAO,CACNf,WAAYA,EAAWE,KAAI,qBAAGL,UAC9BmB,UAAW,qBACXC,cAAe,0BAKlB,OAA6B,IAAtBjB,EAAWoB,OACjB,qCACC,oBAAG4B,UAAU,cAAb,+BACoBzC,EAAWlB,EAAUU,SAEzC,sBAAKiD,UAAU,gBAAf,UACC,sBAAKA,UAAU,0BAAf,UACC,oBAAIA,UAAU,aAAd,yBACA,mBAAGA,UAAU,YAAb,SACE3D,EAAUE,MAAM8D,mBAEjBH,EACD,mBAAGF,UAAU,0BAAb,0CAID,sBAAKA,UAAU,+BAAf,UACC,oBAAIA,UAAU,aAAd,8BACA,mBAAGA,UAAU,YAAb,SACE3D,EAAUM,WAAW0D,mBAEtBF,EACD,mBAAGH,UAAU,0BAAb,0CAID,sBAAKA,UAAU,2BAAf,UACC,oBAAIA,UAAU,aAAd,0BACA,mBAAGA,UAAU,YAAb,SACE3D,EAAUQ,OAAOwD,mBAElBD,EACD,mBAAGJ,UAAU,0BAAb,gDAOH,cC+BaM,G,OAzGD,SAAC,GAAoB,IAAlBtD,EAAiB,EAAjBA,WAChB,GAAIA,IAAe,GAClB,MAAO,aAER,IAAM2B,EACiB,IAAtB3B,EAAWoB,OACV,cAAC,OAAD,CACC4B,UAAU,QACVxD,KAAM,CACLoC,OAAQ5B,EAAWE,KAAI,gBAAGH,EAAH,EAAGA,KAAH,OAAcQ,EAAWR,MAChD8B,SAAU,CACT,CACCrC,KAAMQ,EAAWE,KAAI,SAAAV,GAAI,OAAIA,EAAKD,SAClCuC,MAAO,QACPC,YAAa,iBACbC,gBAAiB,uBACjBC,MAAM,EACNC,YAAa,EACbC,eAAgB,IAEjB,CACC3C,KAAMQ,EAAWE,KAAI,SAAAV,GAAI,OAAIA,EAAKW,aAClC2B,MAAO,aACPC,YAAa,iBACbC,gBAAiB,uBACjBC,MAAM,EACNC,YAAa,EACbC,eAAgB,IAEjB,CACC3C,KAAMQ,EAAWE,KAAI,SAAAV,GAAI,OAAIA,EAAKK,UAClCiC,MAAO,SACPC,YAAa,iBACbC,gBAAiB,uBACjBC,MAAM,EACNC,YAAa,EACbC,eAAgB,MAInBC,QAAS,CACRC,YAAY,EAEZM,OAAQ,CACPC,MAAO,CACN,CACCW,MAAO,CACNC,UAAU,EACVC,cAAe,GACfC,UAAW,4BAEZC,UAAW,CACVC,cAAe,2BACfC,MAAO,8BAIVf,MAAO,CACN,CACCS,MAAO,CACNC,UAAU,EACVC,cAAe,GACfC,UAAW,2BACXI,SAAU,SAACC,EAAOC,EAAOC,GAAf,OACTF,EAAMV,mBAERa,WAAY,CACXrB,SAAS,GAEVc,UAAW,CACVC,cAAe,2BACfC,MAAO,+BAKXd,OAAQ,CACPnB,OAAQ,CACPuC,OAAQ,SAACC,EAAMC,GAEd,OAAQD,EAAKE,KAAKC,SAAS,WAE5Bb,UAAW,2BACXc,SAAU,QAMd,aAGF,OACC,mCACC,sBAAKxB,UAAU,gBAAf,UACC,oBAAIA,UAAU,cAAd,0DAGA,2EACCrB,S,2BClEU8C,EAlCE,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACnB,OACC,mCACC,cAACC,EAAA,EAAD,CAAa3B,UAAU,WAAvB,SACC,eAAC4B,EAAA,EAAD,CACC5B,UAAU,kBACV6B,WAAY,CACXC,QAAS,CACRC,KAAM,UAGRC,aAAa,SACbC,SAAU,SAAAC,GAAC,OAAIR,EAAiBQ,EAAEC,OAAOpB,QAR1C,UAUC,wBAAQA,MAAM,SAAd,qBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,+BACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,4BACA,wBAAQA,MAAM,KAAd,wCACA,wBAAQA,MAAM,KAAd,oCACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,mCACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,2BACA,wBAAQA,MAAM,KAAd,4BC8EUqB,E,4MAnGdC,MAAQ,CACPhG,UAAW,GACXW,WAAY,GACZyC,KAAM,aACNxD,SAAU,U,EAGXqG,U,sBAAY,4BAAApG,EAAA,yDAEa,WAApB,EAAKmG,MAAM5C,KAFJ,gCAGUrC,EAAY,EAAKiF,MAAMpG,UAHjC,OAGVsG,EAHU,6CAKUvG,EAAgB,EAAKqG,MAAMpG,UALrC,OAKVsG,EALU,cAOX,EAAKC,SAAS,CACbnG,UAAWkG,EAAYlG,UACvBW,WAAYuF,EAAYvF,aATd,4C,EAaZyF,e,uCAAiB,WAAMC,GAAN,SAAAxG,EAAA,sDAChB,EAAKsG,SACJ,CAAEvG,SAAUyG,GADb,sBAEC,sBAAAxG,EAAA,sEAAkB,EAAKoG,YAAvB,oFAHe,2C,kPAQVK,KAAKL,Y,qIAGF,ILxCgBM,EKwCjB,SACoCD,KAAKN,MAAzChG,EADA,EACAA,UAAWW,EADX,EACWA,WAAYf,EADvB,EACuBA,SAE/B,OAAI0G,KAAKN,MAAM7F,OAAS,IAAMmG,KAAK3F,aAAe,GAC1C,aAIP,qCACC,oBAAIgD,UAAU,QAAd,mCACA,sBAAKA,UAAU,mBAAf,UACC,cAAC,EAAD,CAAU0B,iBAAkBiB,KAAKF,iBACjC,sBAAKzC,UAAU,iBAAf,UACC,wBACCA,UACqB,WAApB2C,KAAKN,MAAM5C,KACR,eACA,WAEJoD,QAAO,sBAAE,sBAAA3G,EAAA,sDACR,EAAKsG,SACJ,CAAE/C,KAAM,UADT,sBAEC,sBAAAvD,EAAA,sEAAkB,EAAKoG,YAAvB,oFAHO,2CANV,uBAeA,wBACCtC,UACqB,eAApB2C,KAAKN,MAAM5C,KACR,eACA,WAEJoD,QAAO,sBAAE,sBAAA3G,EAAA,sDACR,EAAKsG,SACJ,CAAE/C,KAAM,cADT,sBAEC,sBAAAvD,EAAA,sEAAkB,EAAKoG,YAAvB,oFAHO,2CANV,oCAiBF,oBAAItC,UAAU,WAAd,ULrFuB4C,EKqFe3G,ELpFvB,CACjB6G,OAAQ,SACRC,GAAI,UACJC,GAAI,mBACJC,GAAI,WACJC,GAAI,gBACJC,GAAI,4BACJC,GAAI,wBACJC,GAAI,cACJC,GAAI,UACJC,GAAI,UACJC,GAAI,uBACJC,GAAI,SACJC,GAAI,eACJC,GAAI,SAGYf,MKoEd,cAAC,EAAD,CAAO7E,MAAO,CAAE1B,YAAWW,gBAC3B,cAAC,EAAD,CAAOA,WAAYA,IACnB,sBAAKgD,UAAU,cAAf,UACC,iEACA,oBAAGA,UAAU,eAAb,qFAEiB,IAChB,mBACCA,UAAU,YACV4D,KAAK,4CACLzB,OAAO,SACP0B,IAAI,sBAJL,+B,GArFYC,IAAMC,WCJxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.97173f97.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"https://api.opencovid.ca/summary\";\nconst startDate = \"2020-08-01\";\n\nexport const fetchCumulative = async location => {\n\ttry {\n\t\tconst todayData = await axios.get(`${baseURL}?loc=${location}`);\n\t\tconst parsedTodayData = {\n\t\t\tcases: todayData.data.summary[0].cumulative_cases,\n\t\t\trecoveries: todayData.data.summary[0].cumulative_recovered,\n\t\t\tdeaths: todayData.data.summary[0].cumulative_deaths,\n\t\t\tdate: todayData.data.summary[0].date,\n\t\t};\n\n\t\tconst dataSeries = await axios.get(\n\t\t\t`${baseURL}?loc=${location}&after=${startDate}`\n\t\t);\n\t\tconst parsedDataSeries = dataSeries.data.summary.map(data => {\n\t\t\treturn {\n\t\t\t\tcases: data.cumulative_cases,\n\t\t\t\trecovered: data.cumulative_recovered,\n\t\t\t\tdeaths: data.cumulative_deaths,\n\t\t\t\tdate: data.date,\n\t\t\t};\n\t\t});\n\n\t\treturn { todayData: parsedTodayData, dataSeries: parsedDataSeries };\n\t} catch (error) {\n\t\treturn error;\n\t}\n};\n\nexport const fetchChange = async location => {\n\ttry {\n\t\tconst todayData = await axios.get(`${baseURL}?loc=${location}`);\n\t\tconst parsedTodayData = {\n\t\t\tcases: todayData.data.summary[0].cases,\n\t\t\trecoveries: todayData.data.summary[0].recovered,\n\t\t\tdeaths: todayData.data.summary[0].deaths,\n\t\t\tdate: todayData.data.summary[0].date,\n\t\t};\n\n\t\tconst dataSeries = await axios.get(\n\t\t\t`${baseURL}?loc=${location}&after=${startDate}`\n\t\t);\n\t\tconst parsedDataSeries = dataSeries.data.summary.map(data => {\n\t\t\treturn {\n\t\t\t\tcases: data.cases,\n\t\t\t\trecovered: data.recovered,\n\t\t\t\tdeaths: data.deaths,\n\t\t\t\tdate: data.date,\n\t\t\t};\n\t\t});\n\n\t\tconsole.log(dataSeries);\n\n\t\treturn { todayData: parsedTodayData, dataSeries: parsedDataSeries };\n\t} catch (error) {\n\t\treturn error;\n\t}\n};\n","export const getProvince = code => {\n\tconst provinces = {\n\t\tcanada: \"Canada\",\n\t\tAB: \"Alberta\",\n\t\tBC: \"British Columbia\",\n\t\tMB: \"Manitoba\",\n\t\tNB: \"New Brunswick\",\n\t\tNL: \"Newfoundland and Labrador\",\n\t\tNT: \"Northwest Territories\",\n\t\tNS: \"Nova Scotia\",\n\t\tNU: \"Nunavut\",\n\t\tON: \"Ontario\",\n\t\tnd: \"Prince Edward Island\",\n\t\tQC: \"Quebec\",\n\t\tSK: \"Saskatchewan\",\n\t\tYT: \"Yukon\",\n\t};\n\n\treturn provinces[code];\n};\n\nexport const formatDate = date => {\n\tconst months = {\n\t\t\"01\": \"January\",\n\t\t\"02\": \"February\",\n\t\t\"03\": \"March\",\n\t\t\"04\": \"April\",\n\t\t\"05\": \"May\",\n\t\t\"06\": \"June\",\n\t\t\"07\": \"July\",\n\t\t\"08\": \"August\",\n\t\t\"09\": \"September\",\n\t\t10: \"October\",\n\t\t11: \"November\",\n\t\t12: \"December\",\n\t};\n\n\tconst dateComponents = date.split(\"-\");\n\tlet dateString = \"\";\n\tdateString += months[dateComponents[1]];\n\tdateString += \" \";\n\tdateString += dateComponents[0];\n\tdateString += \", \";\n\tdateString += dateComponents[2];\n\treturn dateString;\n};\n","import \"./SmallChart.css\";\nimport { Line } from \"react-chartjs-2\";\n\nconst smoothness = 8;\n\nconst SmallChart = ({ props: { dataSeries, borderCol, backgroundCol } }) => {\n\tif (dataSeries === []) {\n\t\treturn \"Loading...\";\n\t}\n\n\t// smooth the data\n\tconst lerpeddata = dataSeries.map((data, i) => {\n\t\tif (i === 0 || i === dataSeries.length - 1) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst average = (dataSeries[i - 1] + dataSeries[i + 1]) / 2;\n\t\t\tconst point = Math.round(\n\t\t\t\t(smoothness * average + data) / (smoothness + 1)\n\t\t\t);\n\t\t\treturn point;\n\t\t}\n\t});\n\n\t// only use every other value\n\tconst lerpedcases = [];\n\tlerpeddata.forEach((data, i) => {\n\t\tif (i % 2 === 0) {\n\t\t\tlerpedcases.push(data);\n\t\t}\n\t});\n\n\tconst lineChart =\n\t\tdataSeries.length !== 0 ? (\n\t\t\t<Line\n\t\t\t\tdata={{\n\t\t\t\t\tlabels: lerpedcases.map(data => \"\"),\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: lerpedcases,\n\t\t\t\t\t\t\tlabel: \"smoothened data\",\n\t\t\t\t\t\t\tborderColor: borderCol,\n\t\t\t\t\t\t\tbackgroundColor: backgroundCol,\n\t\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\t\tpointHitRadius: 10,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}}\n\t\t\t\toptions={{\n\t\t\t\t\tresponsive: true,\n\t\t\t\t\ttooltips: { enabled: false },\n\t\t\t\t\thover: { mode: null },\n\t\t\t\t\tscaleShowLabels: false,\n\t\t\t\t\tscales: {\n\t\t\t\t\t\txAxes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : (\n\t\t\t\"Loading...\"\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"small-chart-wrapper\">{lineChart}</div>\n\t\t</>\n\t);\n};\n\nexport default SmallChart;\n","import \"./Cards.css\";\nimport { formatDate } from \"../../functions\";\nimport SmallChart from \"../SmallChart/SmallChart\";\n\nconst Cards = ({ props: { todayData, dataSeries } }) => {\n\tif (todayData === {} || dataSeries.length === 0) {\n\t\treturn \"Loading...\";\n\t}\n\n\tconst casesChart = (\n\t\t<SmallChart\n\t\t\tprops={{\n\t\t\t\tdataSeries: dataSeries.map(({ cases }) => cases),\n\t\t\t\tborderCol: \"rgba(0, 0, 255, 1)\",\n\t\t\t\tbackgroundCol: \"rgba(0, 0, 255, 0.5)\",\n\t\t\t}}\n\t\t/>\n\t);\n\n\tconst recoveriesChart = (\n\t\t<SmallChart\n\t\t\tprops={{\n\t\t\t\tdataSeries: dataSeries.map(({ recovered }) => recovered),\n\t\t\t\tborderCol: \"rgba(0, 255, 0, 1)\",\n\t\t\t\tbackgroundCol: \"rgba(0, 255, 0, 0.5)\",\n\t\t\t}}\n\t\t/>\n\t);\n\n\tconst deathsChart = (\n\t\t<SmallChart\n\t\t\tprops={{\n\t\t\t\tdataSeries: dataSeries.map(({ deaths }) => deaths),\n\t\t\t\tborderCol: \"rgba(255, 0, 0, 1)\",\n\t\t\t\tbackgroundCol: \"rgba(255, 0, 0, 0.5)\",\n\t\t\t}}\n\t\t/>\n\t);\n\n\treturn dataSeries.length !== 0 ? (\n\t\t<>\n\t\t\t<p className=\"latest-date\">\n\t\t\t\tLatest data from: {formatDate(todayData.date)}\n\t\t\t</p>\n\t\t\t<div className=\"cards-wrapper\">\n\t\t\t\t<div className=\"card-wrapper cases-card\">\n\t\t\t\t\t<h3 className=\"card-title\">Cases Today</h3>\n\t\t\t\t\t<p className=\"card-stat\">\n\t\t\t\t\t\t{todayData.cases.toLocaleString()}\n\t\t\t\t\t</p>\n\t\t\t\t\t{casesChart}\n\t\t\t\t\t<p className=\"small-chart-description\">\n\t\t\t\t\t\tInterpolated to see trend\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-wrapper recoveries-card\">\n\t\t\t\t\t<h3 className=\"card-title\">Recoveries Today</h3>\n\t\t\t\t\t<p className=\"card-stat\">\n\t\t\t\t\t\t{todayData.recoveries.toLocaleString()}\n\t\t\t\t\t</p>\n\t\t\t\t\t{recoveriesChart}\n\t\t\t\t\t<p className=\"small-chart-description\">\n\t\t\t\t\t\tInterpolated to see trend\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-wrapper deaths-card\">\n\t\t\t\t\t<h3 className=\"card-title\">Deaths Today</h3>\n\t\t\t\t\t<p className=\"card-stat\">\n\t\t\t\t\t\t{todayData.deaths.toLocaleString()}\n\t\t\t\t\t</p>\n\t\t\t\t\t{deathsChart}\n\t\t\t\t\t<p className=\"small-chart-description\">\n\t\t\t\t\t\tInterpolated to see trend\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t) : (\n\t\t\"Loading...\"\n\t);\n};\n\nexport default Cards;\n","import \"./Chart.css\";\nimport { Line } from \"react-chartjs-2\";\nimport { formatDate } from \"../../functions\";\n\nconst Chart = ({ dataSeries }) => {\n\tif (dataSeries === []) {\n\t\treturn \"Loading...\";\n\t}\n\tconst lineChart =\n\t\tdataSeries.length !== 0 ? (\n\t\t\t<Line\n\t\t\t\tclassName=\"chart\"\n\t\t\t\tdata={{\n\t\t\t\t\tlabels: dataSeries.map(({ date }) => formatDate(date)),\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: dataSeries.map(data => data.cases),\n\t\t\t\t\t\t\tlabel: \"Cases\",\n\t\t\t\t\t\t\tborderColor: \"rgb(0, 0, 255)\",\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(0, 0, 255, 0.3)\",\n\t\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\t\tpointHitRadius: 10,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: dataSeries.map(data => data.recovered),\n\t\t\t\t\t\t\tlabel: \"Recoveries\",\n\t\t\t\t\t\t\tborderColor: \"rgb(0, 255, 0)\",\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(0, 255, 0, 0.4)\",\n\t\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\t\tpointHitRadius: 10,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: dataSeries.map(data => data.deaths),\n\t\t\t\t\t\t\tlabel: \"Deaths\",\n\t\t\t\t\t\t\tborderColor: \"rgb(255, 0, 0)\",\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(255, 0, 0, 0.5)\",\n\t\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\t\tpointHitRadius: 10,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}}\n\t\t\t\toptions={{\n\t\t\t\t\tresponsive: true,\n\n\t\t\t\t\tscales: {\n\t\t\t\t\t\txAxes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\tautoSkip: true,\n\t\t\t\t\t\t\t\t\tmaxTicksLimit: 20,\n\t\t\t\t\t\t\t\t\tfontColor: \"rgba(255, 255, 255, 0.7)\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\t\tzeroLineColor: \"rgba(255, 255, 255, 0.7)\",\n\t\t\t\t\t\t\t\t\tcolor: \"rgba(255, 255, 255, 0.2)\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\tautoSkip: true,\n\t\t\t\t\t\t\t\t\tmaxTicksLimit: 20,\n\t\t\t\t\t\t\t\t\tfontColor: \"rgba(255, 255, 255, 0.7)\",\n\t\t\t\t\t\t\t\t\tcallback: (value, index, values) =>\n\t\t\t\t\t\t\t\t\t\tvalue.toLocaleString(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\t\tzeroLineColor: \"rgba(255, 255, 255, 0.7)\",\n\t\t\t\t\t\t\t\t\tcolor: \"rgba(255, 255, 255, 0.2)\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tfilter: (item, chart) => {\n\t\t\t\t\t\t\t\t// Logic to remove a particular legend item goes here\n\t\t\t\t\t\t\t\treturn !item.text.includes(\"lerped\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfontColor: \"rgba(255, 255, 255, 0.9)\",\n\t\t\t\t\t\t\tfontSize: 16,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : (\n\t\t\t\"Loading...\"\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"chart-wrapper\">\n\t\t\t\t<h3 className=\"chart-title\">\n\t\t\t\t\tCOVID-19 Data from August 1, 2020 to Present\n\t\t\t\t</h3>\n\t\t\t\t<p>Click the legend below to hide/unhide data</p>\n\t\t\t\t{lineChart}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Chart;\n","import \"./Dropdown.css\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nconst Dropdown = ({ onLocationChange }) => {\n\treturn (\n\t\t<>\n\t\t\t<FormControl className=\"dropdown\">\n\t\t\t\t<NativeSelect\n\t\t\t\t\tclassName=\"dropdown-select\"\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tclasses: {\n\t\t\t\t\t\t\ticon: \"arrow\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tdefaultValue=\"canada\"\n\t\t\t\t\tonChange={e => onLocationChange(e.target.value)}\n\t\t\t\t>\n\t\t\t\t\t<option value=\"canada\"> Canada</option>\n\t\t\t\t\t<option value=\"AB\"> Alberta</option>\n\t\t\t\t\t<option value=\"BC\"> British Columbia</option>\n\t\t\t\t\t<option value=\"MB\"> Manitoba</option>\n\t\t\t\t\t<option value=\"NB\"> New Brunswick</option>\n\t\t\t\t\t<option value=\"NL\"> Newfoundland and Labrador</option>\n\t\t\t\t\t<option value=\"NT\"> Northwest Territories</option>\n\t\t\t\t\t<option value=\"NS\"> Nova Scotia</option>\n\t\t\t\t\t<option value=\"NU\"> Nunavut</option>\n\t\t\t\t\t<option value=\"ON\"> Ontario</option>\n\t\t\t\t\t<option value=\"nd\"> Prince Edward Island</option>\n\t\t\t\t\t<option value=\"QC\"> Quebec</option>\n\t\t\t\t\t<option value=\"SK\"> Saskatchewan</option>\n\t\t\t\t\t<option value=\"YT\"> Yukon</option>\n\t\t\t\t</NativeSelect>\n\t\t\t</FormControl>\n\t\t</>\n\t);\n};\n\nexport default Dropdown;\n","import React from \"react\";\nimport \"./App.css\";\nimport { fetchCumulative, fetchChange } from \"./api/api\";\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport Dropdown from \"./components/Dropdown/Dropdown\";\nimport { getProvince } from \"./functions\";\n\nclass App extends React.Component {\n\tstate = {\n\t\ttodayData: {},\n\t\tdataSeries: [],\n\t\tmode: \"cumulative\", // change or cumulative\n\t\tlocation: \"canada\",\n\t};\n\n\tfetchData = async () => {\n\t\tlet fetchedData;\n\t\tif (this.state.mode === \"change\") {\n\t\t\tfetchedData = await fetchChange(this.state.location);\n\t\t} else {\n\t\t\tfetchedData = await fetchCumulative(this.state.location);\n\t\t}\n\t\tthis.setState({\n\t\t\ttodayData: fetchedData.todayData,\n\t\t\tdataSeries: fetchedData.dataSeries,\n\t\t});\n\t};\n\n\tchangeLocation = async newLocation => {\n\t\tthis.setState(\n\t\t\t{ location: newLocation },\n\t\t\tasync () => await this.fetchData()\n\t\t);\n\t};\n\n\tasync componentDidMount() {\n\t\tawait this.fetchData();\n\t}\n\n\trender() {\n\t\tconst { todayData, dataSeries, location } = this.state;\n\n\t\tif (this.state.data === {} || this.dataSeries === []) {\n\t\t\treturn \"Loading...\";\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1 className=\"title\">COVID-19 Data Tracker</h1>\n\t\t\t\t<div className=\"controls-wrapper\">\n\t\t\t\t\t<Dropdown onLocationChange={this.changeLocation} />\n\t\t\t\t\t<div className=\"button-wrapper\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tthis.state.mode === \"change\"\n\t\t\t\t\t\t\t\t\t? \"selected-btn\"\n\t\t\t\t\t\t\t\t\t: \"mode-btn\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t{ mode: \"change\" },\n\t\t\t\t\t\t\t\t\tasync () => await this.fetchData()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNew/Daily\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tthis.state.mode === \"cumulative\"\n\t\t\t\t\t\t\t\t\t? \"selected-btn\"\n\t\t\t\t\t\t\t\t\t: \"mode-btn\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t{ mode: \"cumulative\" },\n\t\t\t\t\t\t\t\t\tasync () => await this.fetchData()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTotal/Cumulative\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<h2 className=\"location\">{getProvince(location)}</h2>\n\t\t\t\t<Cards props={{ todayData, dataSeries }} />\n\t\t\t\t<Chart dataSeries={dataSeries} />\n\t\t\t\t<div className=\"information\">\n\t\t\t\t\t<p>Made by Tanson Lee with React.js</p>\n\t\t\t\t\t<p className=\"smaller-text\">\n\t\t\t\t\t\tLink to the code and more information about this project\n\t\t\t\t\t\ton GitHub here:{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"code-link\"\n\t\t\t\t\t\t\thref=\"https://github.com/tansonlee/covid19-data\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCode\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}